{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.provider.HasMultipleValues",
            "member": "Class org.gradle.api.provider.HasMultipleValues",
            "acceptation": "Introduce SupportsConvention",
            "changes": [
                "org.gradle.api.provider.SupportsConvention"
            ]
        },
        {
            "type": "org.gradle.api.provider.MapProperty",
            "member": "Class org.gradle.api.provider.MapProperty",
            "acceptation": "Introduce SupportsConvention",
            "changes": [
                "org.gradle.api.provider.SupportsConvention"
            ]
        },
        {
            "type": "org.gradle.api.provider.Property",
            "member": "Class org.gradle.api.provider.Property",
            "acceptation": "Introduce SupportsConvention",
            "changes": [
                "org.gradle.api.provider.SupportsConvention"
            ]
        },
        {
            "type": "org.gradle.api.services.BuildServiceRegistry",
            "member": "Method org.gradle.api.services.BuildServiceRegistry.registerIfAbsent(java.lang.String,java.lang.Class)",
            "acceptation": "Add new default method without action",
            "changes": [
                "Method now provides default implementation"
            ]
        },
        {
            "type": "org.gradle.caching.BuildCacheException",
            "member": "Superclass [removed]",
            "acceptation": "Let BuildCacheException not depend on Gradle types",
            "changes": [
                "Superclass has been removed"
            ]
        },
        {
            "type": "org.gradle.caching.BuildCacheKey",
            "member": "Method org.gradle.caching.BuildCacheKey.getDisplayName()",
            "acceptation": "BuildCacheKey is not Describable anymore",
            "changes": [
                "Deprecated annotation was added"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.BuiltinPluginIdExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.BuiltinPluginIdExtensionsKt.getJdk-toolchains(org.gradle.plugin.use.PluginDependenciesSpec)",
            "acceptation": "Accessor for non existing plugin class, usage would fail the build",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependenciesExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.DependenciesExtensionsKt.invokeConstraint(org.gradle.api.artifacts.dsl.DependencyCollector,org.gradle.api.provider.Provider)",
            "acceptation": "Kotlin name matching is wrong -- this method is annotated",
            "changes": [
                "Method added to public class"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependenciesExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.DependenciesExtensionsKt.invokeConstraint(org.gradle.api.artifacts.dsl.DependencyCollector,org.gradle.api.provider.Provider,org.gradle.api.Action)",
            "acceptation": "Kotlin name matching is wrong -- this method is annotated",
            "changes": [
                "Method added to public class"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_4xzlmchnjfhf5wwk67zexqao1Kt",
            "member": "Method org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_4xzlmchnjfhf5wwk67zexqao1Kt.registerIfAbsent(org.gradle.api.services.BuildServiceRegistry,java.lang.String,kotlin.reflect.KClass)",
            "acceptation": "Add new default method without action",
            "changes": [
                "Method added to public class"
            ]
        },
        {
            "type": "org.gradle.util.SingleMessageLogger",
            "member": "Class org.gradle.util.SingleMessageLogger",
            "acceptation": "init is internal API of the base class and this will be removed in 9.0",
            "changes": [
                "org.gradle.internal.deprecation.DeprecationLogger.init(org.gradle.problems.buildtree.ProblemDiagnosticsFactory,org.gradle.api.logging.configuration.WarningMode,org.gradle.internal.operations.BuildOperationProgressEventEmitter,org.gradle.api.problems.Problems)"
            ]
        }
    ]
}
